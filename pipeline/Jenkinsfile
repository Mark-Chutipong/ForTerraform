pipeline {
    agent {
        docker { 
            image 'hashicorp/terraform:1.6.6'
            args "--entrypoint=''"
        }
    }
    // options {
    //     ansiColor('xterm')
    // }
    stages {
        stage('Init') {
            steps {
                sh 'terraform init'
            }
        }
        stage('Plan') {
            steps {
                //sh 'terraform plan $(TerraformVarsFile)'
                //sh 'terraform plan -var-file="tfvars/mark.tfvars-var-file=tfvars/mark2.tfvars"'
                //sh 'terraform plan -var-file="tfvars/mark2.tfvars"'
                sh 'terraform plan -var-file="tfvars/mark.tfvars"'
                //sh 'terraform plan -var-file="*.tfvars"'
                //sh 'terraform plan -var-file="tfvars/mark.auto.tfvars"'
                //sh 'terraform plan -var-file="${name,fileset(path.module, "tfvars/*.tfvars")}"'
            }
        }
        stage('Approval') {
            steps {
                timeout(time: 3, unit: "MINUTES") {
                    input message: 'Do you want to approve the deployment?', ok: 'Yes'
                }
            }
        }
        stage('Action') {
            steps {
                //sh 'terraform ${action} $(TerraformVarsFile) -auto-approve'
                //sh 'terraform ${action} -var-file="tfvars/mark.tfvars-var-file=tfvars/mark2.tfvars" -auto-approve'
                //sh 'terraform ${action} -var-file="tfvars/mark2.tfvars" -auto-approve'
                sh 'terraform ${action} -var-file="tfvars/mark.tfvars" -auto-approve'
                //sh 'terraform ${action} -var-file="*.tfvars" -auto-approve'
                //sh 'terraform ${action} -var-file="tfvars/mark.auto.tfvars" -auto-approve'
                //sh 'terraform ${action} -var-file="${name,fileset(path.module, "tfvars/*.tfvars")}" -auto-approve'
            }
        }
    }
    post {
        success {
            echo "Release Success"
        }
        failure {
            echo "Release Failed"
        }
        cleanup {
            echo "Clean up in post work space"
            cleanWs()
        }
    }
}
